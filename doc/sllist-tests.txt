universe = { { 0 }, { item }, { list } }
0 := { }
item := < data , next >
list := { item, item } | { list, item }

insert:

 x  0.0 (0, 0)           -> 0

 x  0.1 (0, item)        -> { item }
 x  0.2 (0, list)        -> { list }
 x  0.3 (item, 0)        -> { item }
 x  0.4 (list, 0)        -> { list }

 x  0.5 (item, item)     -> { item, item }
 x  0.6 (item, list)     -> { item, list }

 x  0.7 (list, item)     -> { list_0, item, list_1, ... }
    0.8 (list_a, list_b) -> { list_a[0], list_b, list_a[1], ... }

remove:

 x  1.0 (0, 0)           -> 0

 x  1.1 (0, item)        -> 0
    1.2 (0, list)        -> reduces to 1.1, due to def of list
 x  1.3 (item, 0)        -> { item }
 x  1.4 (list, 0)        -> { list }

 x  1.5 (item, item)     -> 0
    1.6 (item, list)     -> reduces to 1.3:
                            item : item->next == 0
                            list : list[0]->next == list[1]
                            but: 0 != item by definition

    1.7 (list, item)     -> { list } ^ item
 x      a ({ item_a, .., item_b, item }, item) -> { item_a, .., item_b }
 x      b ({ item_a, .., item_b, item, item_c, .., item_d }, item) -> { item_a, .., item_b, item_c, .., item_d }
 x      c ({ item, item_a, .., item_b }, item) -> { item_a, .., item_b }

    1.8 (list_a, list_b) -> reduces to 1.7, due to definition of list
